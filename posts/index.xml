<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Eric Peña</title>
    <link>https://ericpena.github.io/posts/</link>
    <description>Recent content in Posts on Eric Peña</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Tue, 12 Nov 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://ericpena.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>(Un)biased Point Estimation</title>
      <link>https://ericpena.github.io/posts/mle/</link>
      <pubDate>Tue, 12 Nov 2024 00:00:00 +0000</pubDate>
      <guid>https://ericpena.github.io/posts/mle/</guid>
      <description>&lt;h2 id=&#34;problem-setup&#34;&gt;Problem Setup&lt;/h2&gt;&#xA;&lt;p&gt;Suppose that $X$ has a uniform distribution on the interval $[0, \theta]$, where $\theta$ is unknown and $X$ could be reaction time to a stimulus or volumes of rocks, for example.&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;info-purple&#34;&gt;&#xA;    &lt;style&gt;&#xA;      .info-purple a {&#xA;        color: inherit;&#xA;        color: #f39c12;&#xA;      }&#xA;      .info-purple a:hover {&#xA;        color: #f39c12;&#xA;        font-weight: bold;&#xA;      }&#xA;    &lt;/style&gt;&#xA;    One goal could be to estimate $\theta$. That is, you have a random sample $(X_1, X_2, \ldots, X_n)$ from a uniform distribution on the interval $[0, \theta]$, where $\theta$ is the unknown parameter to be estimated.&#xA;&lt;/div&gt;&#xA;&lt;script&gt;&#xA;document.querySelectorAll(&#39;.info-purple a&#39;).forEach(function(link) {&#xA;    link.setAttribute(&#39;target&#39;, &#39;_blank&#39;);&#xA;    link.setAttribute(&#39;rel&#39;, &#39;noopener noreferrer&#39;);&#xA;});&#xA;&lt;/script&gt;&#xA;&lt;h3 id=&#34;likelihood-function&#34;&gt;Likelihood Function&lt;/h3&gt;&#xA;&lt;p&gt;The probability density function (PDF) of a single observation $X_i$ from a uniform distribution on $[0, \theta]$:&#xA;$$&#xA;f(x_i; \theta) =&#xA;\begin{cases}&#xA;\frac{1}{\theta} &amp;amp; \text{if } 0 \leq x_i \leq \theta \\&#xA;0 &amp;amp; \text{otherwise}&#xA;\end{cases}&#xA;$$&#xA;Given that the sample is independent and identically distributed (i.i.d.), the joint likelihood function for the entire sample is the product of the individual PDFs:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Lagrangian Mechanics</title>
      <link>https://ericpena.github.io/posts/coord/</link>
      <pubDate>Sat, 09 Nov 2024 00:00:00 +0000</pubDate>
      <guid>https://ericpena.github.io/posts/coord/</guid>
      <description>&lt;h2 id=&#34;table-of-contents&#34;&gt;Table of Contents&lt;/h2&gt;&#xA;&lt;ol start=&#34;0&#34;&gt;&#xA;&lt;li&gt;&lt;a href=&#34;../posts/coord/#overview&#34;&gt;Overview&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;../posts/coord/#equation-of-motion&#34;&gt;Equation of Motion&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;../posts/coord/#principle-of-stationary-action&#34;&gt;Principle of Stationary Action&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;../posts/coord/#euler-lagrange-equation&#34;&gt;Euler-Lagrange Equation&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;../posts/coord/#relationship-to-newtons-second-law&#34;&gt;Relationship to Newton&amp;rsquo;s Second Law&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;../posts/coord/#applications&#34;&gt;Applications&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;overview&#34;&gt;Overview&lt;/h2&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;info-green&#34;&gt;&#xA;    &lt;style&gt;&#xA;      .info-green a {&#xA;        color: inherit;&#xA;        color: #f39c12;&#xA;      }&#xA;      .info-green a:hover {&#xA;        color: #f39c12;&#xA;        font-weight: bold;&#xA;      }&#xA;    &lt;/style&gt;&#xA;    Lagrangian mechanics offers a powerful and elegant framework for understanding the dynamics of physical systems. Developed by Joseph-Louis Lagrange in the 18th century, it reformulates Newtonian mechanics to focus on energy principles rather than forces. At its core, the Lagrangian approach introduces a function called the Lagrangian, defined as the difference between the kinetic energy and potential energy of a system. This method is particularly useful for analyzing complex systems with constraints, such as pendulums, planetary motion, or even modern robotics, as it simplifies calculations and generalizes easily to multiple dimensions. By applying the principle of least action, Lagrangian mechanics allows us to derive equations of motion that reveal the underlying behavior of a system with remarkable clarity. In this article, we’ll explore the foundational concepts of this framework, aiming to make it accessible to anyone curious about the mathematical elegance of physics.&#xA;&lt;/div&gt;&#xA;&lt;script&gt;&#xA;document.querySelectorAll(&#39;.info-green a&#39;).forEach(function(link) {&#xA;    link.setAttribute(&#39;target&#39;, &#39;_blank&#39;);&#xA;    link.setAttribute(&#39;rel&#39;, &#39;noopener noreferrer&#39;);&#xA;});&#xA;&lt;/script&gt;&#xA;&lt;h2 id=&#34;equation-of-motion&#34;&gt;Equation of Motion&lt;/h2&gt;&#xA;&lt;p&gt;The equations of motion are foundational to our understanding of physics, describing how systems evolve over time under the influence of forces. In classical mechanics, Newton’s second law, $F=ma$, provides a straightforward yet powerful framework: it relates the motion of an object to the forces acting upon it, allowing us to predict trajectories and dynamics from the motion of planets to the flight of a baseball. However, as our understanding of physics deepened, the equations of motion took on even greater significance, revealing connections between seemingly disparate phenomena and embodying deeper principles about the universe.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Modified Coupon Collector&#39;s Problem</title>
      <link>https://ericpena.github.io/posts/mod-coupon/</link>
      <pubDate>Tue, 21 May 2024 00:00:00 +0000</pubDate>
      <guid>https://ericpena.github.io/posts/mod-coupon/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;In probability theory, the coupon collector&amp;rsquo;s problem refers to the mathematical analysis of collecting every distinct kind of element when randomly choosing elements with replacement. Two initial questions can be asked for this problem: &lt;strong&gt;(1)&lt;/strong&gt; If there are $k$ different kinds of coupons, what is the probability that all $k$ kinds of coupons have been collected after $n$ coupons are collected with replacement? &lt;strong&gt;(2)&lt;/strong&gt; Given $k$ kinds of coupons, how many coupons do you expect you need to draw with replacement before having drawn each coupon at least once?&lt;/p&gt;</description>
    </item>
    <item>
      <title>Throwing at Wall</title>
      <link>https://ericpena.github.io/posts/throwing-wall/</link>
      <pubDate>Wed, 21 Feb 2024 00:00:00 +0000</pubDate>
      <guid>https://ericpena.github.io/posts/throwing-wall/</guid>
      <description>&lt;h3 id=&#34;d-morin-347&#34;&gt;D. Morin 3.47&lt;/h3&gt;&#xA;&lt;p&gt;You throw a ball with speed $v_0$ at a vertical wall, a distance $l$ away. At what angle should you throw the ball so that it hits the wall as high as possible? Assume $l &amp;lt; v_0^2/g$.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;In general,&lt;/p&gt;&#xA;&lt;p&gt;$$y = y_0 + v_{0,y}t - \frac{1}{2}gt^2 = y_0 + v_{0}\cdot\sin(\phi)\cdot t - \frac{1}{2}gt^2$$&#xA;$$x = x_0 + v_{0,x}t = x_0 + v_{0}\cdot\cos(\phi)\cdot t$$&lt;/p&gt;&#xA;&lt;p&gt;The time it takes to hit the wall is,&lt;/p&gt;</description>
    </item>
    <item>
      <title>Birthdays</title>
      <link>https://ericpena.github.io/posts/birthday/</link>
      <pubDate>Tue, 07 Mar 2023 00:00:00 +0000</pubDate>
      <guid>https://ericpena.github.io/posts/birthday/</guid>
      <description>&lt;h2 id=&#34;motivation&#34;&gt;Motivation&lt;/h2&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;info-purple&#34;&gt;&#xA;    &lt;style&gt;&#xA;      .info-purple a {&#xA;        color: inherit;&#xA;        color: #f39c12;&#xA;      }&#xA;      .info-purple a:hover {&#xA;        color: #f39c12;&#xA;        font-weight: bold;&#xA;      }&#xA;    &lt;/style&gt;&#xA;    &lt;p&gt;Consider this scene from a Seinfeld episode (&lt;a href=&#34;https://www.youtube.com/watch?v=unxHTEdye2A&#34;&gt;LINK&lt;/a&gt; if you&amp;rsquo;d like to watch the short clip)&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Coworker&lt;/strong&gt;: &amp;ldquo;Elaine? Cake?&amp;rdquo;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Elaine&lt;/strong&gt;: &amp;ldquo;Oh, no thanks&amp;rdquo;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Coworker&lt;/strong&gt;: &amp;ldquo;It&amp;rsquo;s Walter&amp;rsquo;s special day!&amp;rdquo;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Elaine&lt;/strong&gt;: &amp;ldquo;You know, there&amp;rsquo;s 200 people who work in this office. Everyday is somebody&amp;rsquo;s special day.&amp;rdquo;&lt;/p&gt;&#xA;&lt;p&gt;Firstly, if by &amp;ldquo;special day&amp;rdquo; she means birthdays, then this of course cannot be true since there are 365-ish days in a year and only 200 people who work in the office. However, suppose there were 365 people in the office.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Cellular Automata Introduction</title>
      <link>https://ericpena.github.io/posts/ca-intro/</link>
      <pubDate>Sun, 24 Apr 2022 00:00:00 +0000</pubDate>
      <guid>https://ericpena.github.io/posts/ca-intro/</guid>
      <description>&lt;h2 id=&#34;motivation&#34;&gt;Motivation&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&amp;ldquo;With four parameters I can fit an elephant, and with five I can make him wiggle his trunk.&amp;rdquo; &amp;ndash; John von Neumann&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;Throughout history, science has aimed to understand and model the natural world as accurately as possible despite its inherent complexity. There are many phenomena in nature whose patterns and behavior seem somewhat unpredictable yet these resulting patterns appear highly structured and organized. Scientists and mathematicians have developed techniques (e.g., calculus, chaos theory, cellular automata) to model nature in its truest form. However, this feat can become problematic for many complex systems that surround us. They are not amenable to the traditional reductionist methodologies that were typically used in gaining scientific understanding. Generally, these systems involve complicated interactions and feedback loops between their parts making it difficult to model their behavior. Moreover, allowing these parts to also interact with their environment exacerbates this modeling dilemma. There is specific behavior which systems exhibit when they are considered complex. Common terms that have been used to describe this behavior are nonlinearity, emergence, self-organization, chaos, spontaneous order, adaptation, and many others. Phenomena such as these have been known to occur across many systems and are said to have universal properties. &lt;em&gt;Complex Systems&lt;/em&gt; is a broad term that refers to the research approach that is applied to many seemingly disparate fields (e.g., physics, computer science, economics, sociology, information theory, nonlinear dynamics, meteorology, education, biology). This approach avoids being tethered to reductionist methods and instead considers that behavior can emerge and, in a sense, &lt;em&gt;be&lt;/em&gt; more than the sum of their parts. At this moment, the field of complex systems is growing rapidly and not yet fully developed. A convenient entry point is building up emergence from simple models. This contributes to the unwavering popularity in cellular automata models. It involves a simple lattice structure&amp;mdash;with a finite set of states&amp;mdash;governed by rules that a person from any background can understand.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Statistical Rethinking (Ch. 2)</title>
      <link>https://ericpena.github.io/posts/stat-think-2/</link>
      <pubDate>Sat, 23 Apr 2022 00:00:00 +0000</pubDate>
      <guid>https://ericpena.github.io/posts/stat-think-2/</guid>
      <description>&lt;p&gt;Code 2.3&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; numpy &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; np&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; scipy.stats &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; stats&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; matplotlib.pyplot &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; plt&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; pymc3 &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; pm&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; arviz &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; az&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;style&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;use(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;dark_background&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;RANDOM_SEED &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;8927&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;random&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;seed(RANDOM_SEED)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# az.style.use(&amp;#34;arviz-darkgrid&amp;#34;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;p_grid &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;linspace(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, num&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;prior &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ones(&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;) &lt;span style=&#34;color:#75715e&#34;&gt;# :: uniform&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;prior &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; p &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.5&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; p &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; p_grid] &lt;span style=&#34;color:#75715e&#34;&gt;# :: step&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;prior &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;exp(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;abs(p &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.5&lt;/span&gt;)) &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; p &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; p_grid] &lt;span style=&#34;color:#75715e&#34;&gt;# :: exp&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;likelihood &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; stats&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;binom&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;pmf(&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;, p_grid)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;unstd_posterior &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; likelihood &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; prior&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;posterior &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; unstd_posterior &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sum(unstd_posterior)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;fig, ax &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;subplots(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot(p_grid, prior, color&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;lightblue&amp;#39;&lt;/span&gt;, marker&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;.&amp;#39;&lt;/span&gt;, label&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;prior&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot(p_grid, likelihood, color&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;lightgreen&amp;#39;&lt;/span&gt;, marker&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;.&amp;#39;&lt;/span&gt;, label&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;likelihood&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot(p_grid, posterior, color&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;darkred&amp;#39;&lt;/span&gt;, marker&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;.&amp;#39;&lt;/span&gt;, markersize&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;, label&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;posterior&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_xlabel(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;probability of water&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_ylabel(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;posterior probability&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;legend()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;grid(&lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;, color&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;lightgray&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;show()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img alt=&#34;png&#34; src=&#34;../images/stat-think-2/chapter-2_5_0.png&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Statistical Rethinking (Ch. 3)</title>
      <link>https://ericpena.github.io/posts/stat-think-3/</link>
      <pubDate>Sat, 23 Apr 2022 00:00:00 +0000</pubDate>
      <guid>https://ericpena.github.io/posts/stat-think-3/</guid>
      <description>&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;{r setup, include=FALSE}&#xA;knitr::opts_chunk$set(echo = TRUE)&#xA;library(rethinking)&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;preliminary-code&#34;&gt;Preliminary Code&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;p_grid &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;seq&lt;/span&gt;(from&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, to&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, length.out&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1000&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;prior &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rep&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1000&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;likelihood &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;dbinom&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;, size&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;, prob&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;p_grid)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;posterior &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; likelihood &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; prior&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;posterior &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; posterior &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sum&lt;/span&gt;(posterior)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;plot&lt;/span&gt;(p_grid, posterior)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img alt=&#34;png&#34; src=&#34;../images/stat-think-3/ch3-0.png&#34;&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;samples &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sample&lt;/span&gt;(p_grid, prob&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;posterior, size&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1e4&lt;/span&gt;, replace&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;3e1&#34;&gt;3E1.&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;sum&lt;/span&gt;(samples &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.2&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt;(samples)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## [1] 5e-04&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;3e2&#34;&gt;3E2.&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;sum&lt;/span&gt;(samples &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.8&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt;(samples)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## [1] 0.1181&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;3e4&#34;&gt;3E4.&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;quantile&lt;/span&gt;(samples, &lt;span style=&#34;color:#ae81ff&#34;&gt;0.2&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;##       20% &#xA;## 0.5155155&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;3e5&#34;&gt;3E5.&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;quantile&lt;/span&gt;(samples, &lt;span style=&#34;color:#ae81ff&#34;&gt;0.8&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;##       80% &#xA;## 0.7597598&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;3e6&#34;&gt;3E6.&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;HPDI&lt;/span&gt;(samples, prob&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.66&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;##     |0.66     0.66| &#xA;## 0.5095095 0.7807808&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;3e7&#34;&gt;3E7.&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;PI&lt;/span&gt;(samples, prob&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.66&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;##       17%       83% &#xA;## 0.4984985 0.7737738&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;3m1&#34;&gt;3M1.&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;p_grid &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;seq&lt;/span&gt;(from&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, to&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, length.out&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1e3&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;prior &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rep&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt;(p_grid))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;likelihood &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;dbinom&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;15&lt;/span&gt;, prob&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;p_grid)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;posterior &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; likelihood &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; prior&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;plot&lt;/span&gt;(p_grid, posterior)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img alt=&#34;png&#34; src=&#34;../images/stat-think-3/ch3-1.png&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Mismatched Socks</title>
      <link>https://ericpena.github.io/posts/socks/</link>
      <pubDate>Thu, 09 Dec 2021 00:00:00 +0000</pubDate>
      <guid>https://ericpena.github.io/posts/socks/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;png&#34; src=&#34;../images/socks/3-pairs.png&#34;&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;introduction&#34;&gt;Introduction&lt;/h1&gt;&#xA;&lt;p&gt;Probability pops up everywhere! One day, I was digging in a basket of (clean) clothes in search of socks pulling several of them out one by one. However, I pulled six socks out but none of them matched! I thought to myself: what the heck is the probability of THAT happening? So let&amp;rsquo;s dig into how one might figure this out. But before we start answering this, let&amp;rsquo;s be more clear about what the situation is.&lt;/p&gt;</description>
    </item>
    <item>
      <title>K-Means</title>
      <link>https://ericpena.github.io/posts/k-means/</link>
      <pubDate>Thu, 01 Jul 2021 00:00:00 +0000</pubDate>
      <guid>https://ericpena.github.io/posts/k-means/</guid>
      <description>&lt;h1 id=&#34;introduction&#34;&gt;Introduction&lt;/h1&gt;&#xA;&lt;p&gt;Imagine we have a scattering of points whose labels or group assignments are completely unknown to us and moreover, we haven&amp;rsquo;t a clue as to the number of groups. Unsupervised clustering helps us in such a situation and allows us to assign a cluster to each point. These clusters are defined by their centroids (centers). The K-Means algorithm will iteratively update these centroids to find the best location for them. It turns out that this clustering problem that K-Means helps solve is a computationally difficult problem (NP-Hard) but nevertheless we will go through the steps in detail here.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Logistic Map</title>
      <link>https://ericpena.github.io/posts/logistic-map/</link>
      <pubDate>Tue, 23 Mar 2021 00:00:00 +0000</pubDate>
      <guid>https://ericpena.github.io/posts/logistic-map/</guid>
      <description>&lt;h2 id=&#34;logistic-map&#34;&gt;Logistic Map&lt;/h2&gt;&#xA;&lt;p&gt;The famous logistic map is a recurrence relation or polynomial mapping of degree 2. It is a nonlinear difference equation capable of capturing complex nonlinear dynamical behavior including chaos. This map was popularized by the biologist Robert May in a &lt;a href=&#34;https://www.researchgate.net/publication/237005499_Simple_Mathematical_Models_With_Very_Complicated_Dynamics&#34;&gt;Nature article&lt;/a&gt; written in 1976. Sadly, Robert May has passed away recently on April 28, 2020. The equation is as follows:&lt;/p&gt;&#xA;&lt;p&gt;$$x_{n+1} = r x_n (1 - x_n)$$&lt;/p&gt;&#xA;&lt;p&gt;The parameter $r$ controls the behavior of the system. It turns out that $r=3.6$ is starting to reach the point of chaos.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Logistic Growth Model</title>
      <link>https://ericpena.github.io/posts/logistic-growth/</link>
      <pubDate>Sun, 14 Mar 2021 00:00:00 +0000</pubDate>
      <guid>https://ericpena.github.io/posts/logistic-growth/</guid>
      <description>&lt;h2 id=&#34;logistic-growth-model&#34;&gt;Logistic Growth Model&lt;/h2&gt;&#xA;&lt;p&gt;The simple difference equation below will show exponential growth behavior:&lt;/p&gt;&#xA;&lt;p&gt;$$x_t = a x_{t-1}$$&lt;/p&gt;&#xA;&lt;p&gt;However, it is often the case that a population cannot grow indefinitely but rather reach a population limit. This limit is called the population&amp;rsquo;s carrying capacity. To create a model with exponential growth but also incorporate this convergence to a population maximum limit, we may start with the following train of thought:&lt;/p&gt;&#xA;&lt;p&gt;$$x_t = f(x_{t-1}) x_{t-1}$$&lt;/p&gt;</description>
    </item>
    <item>
      <title>P Value</title>
      <link>https://ericpena.github.io/posts/p-value/</link>
      <pubDate>Wed, 16 Dec 2020 00:00:00 +0000</pubDate>
      <guid>https://ericpena.github.io/posts/p-value/</guid>
      <description>&lt;h1 id=&#34;what-is-a-p-value&#34;&gt;What is a P-Value?&lt;/h1&gt;&#xA;&lt;p&gt;An average person might say p-values are of utmost importance in a student&amp;rsquo;s statistical toolbox. However, while teaching statistics and probability, I have noticed its subtle definition and conceptual underpinnings being grossly under-emphasized. This note may help clarify what a p-value is and how we use it to make decisions.&lt;/p&gt;&#xA;&lt;p&gt;To explain what a p-value is, I will start with the &amp;ldquo;&lt;strong&gt;p&lt;/strong&gt;&amp;rdquo;. What does it stand for? If you&amp;rsquo;re thinking &lt;em&gt;probability&lt;/em&gt;, then you&amp;rsquo;re correct. The tricky question becomes: &lt;em&gt;the probability of what?&lt;/em&gt; One definition might be: a p-value is the probability of getting an observed value of the test statistic (or more extreme value), given that the null hypothesis is true. Sounds confusing, I know. Variants of this definition are also used but generally this language doesn&amp;rsquo;t help if you&amp;rsquo;re actually trying to learn it. Let&amp;rsquo;s break this topic down with the use of a story.&lt;/p&gt;</description>
    </item>
    <item>
      <title>PCA with Eigenvalue Decomposition</title>
      <link>https://ericpena.github.io/posts/pca-evd/</link>
      <pubDate>Mon, 29 Jun 2020 00:00:00 +0000</pubDate>
      <guid>https://ericpena.github.io/posts/pca-evd/</guid>
      <description>&lt;p&gt;In this article, I go into how we can perform Principal Component Analysis (PCA) using the method of Eigenvalue Decomposition (EVD). Generally, PCA is done by peforming a change of basis on the data, typically by utilizing eigenvectors that find the principal directions of the data. Another important thing to know is that the Eigenvalue Decomposition does not always exist. Eigenvalue Decomposition can only be done on square, full-rank, positive semi-definite matricies. Take a look at the PCA Single Value Decomposition article to learn another way of performing PCA. For now, let&amp;rsquo;s continue with EVD.&lt;/p&gt;</description>
    </item>
    <item>
      <title>PCA with Single Value Decomposition</title>
      <link>https://ericpena.github.io/posts/pca-svd/</link>
      <pubDate>Mon, 29 Jun 2020 00:00:00 +0000</pubDate>
      <guid>https://ericpena.github.io/posts/pca-svd/</guid>
      <description>&lt;p&gt;In another article, Principal Component Analysis was performed using Eigenvalue Decomposition. In this article we take a different approach: Single Value Decomposition. The general idea is that for any matrix we may perform Single Value Decomposition - this is guaranteed. It is a powerful tool that is used in many fields. On the other hand, the Eigenvalue Decomposition does not always exist. Eigenvalue Decomposition can only be done on square, full-rank, positive semi-definite matricies.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Linear Regression</title>
      <link>https://ericpena.github.io/posts/linear-regression/</link>
      <pubDate>Fri, 29 May 2020 00:00:00 +0000</pubDate>
      <guid>https://ericpena.github.io/posts/linear-regression/</guid>
      <description>&lt;h2 id=&#34;mathematical-foundations&#34;&gt;Mathematical Foundations&lt;/h2&gt;&#xA;&lt;p&gt;The linear model is often the first model we learn fitting data. Given a vector of inputs $X^T = (X_1, X_2, \ldots, X_p)$, we can predict the output $Y$ with the following model:&lt;/p&gt;&#xA;&lt;p&gt;$$\hat Y = \hat \beta_0 + \sum_{j=1}^p X_j \hat \beta_j$$&lt;/p&gt;&#xA;&lt;p&gt;Many times, it&amp;rsquo;s convenient to include the vector $\textbf{1}$ in $\textbf{X}$ and include the $\hat \beta_0$ in the vector $\hat \beta$ so we may represent this linear model in vector form as an inner product:&lt;/p&gt;</description>
    </item>
    <item>
      <title>R Data Types</title>
      <link>https://ericpena.github.io/posts/r-types/</link>
      <pubDate>Thu, 21 May 2020 00:00:00 +0000</pubDate>
      <guid>https://ericpena.github.io/posts/r-types/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;&amp;ldquo;Truth is ever to be found in simplicity, and not in the multiplicity and confusion of things.&amp;rdquo;&amp;mdash;Isaac Newton&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;I approached R in the same way I would any language. I immediately delve into for-loops, conditional statements, user-defined functions, classes, and so on. I didn&amp;rsquo;t pay much attention to data types at first - assuming they&amp;rsquo;re not much different than what I&amp;rsquo;ve seen already. I found myself using dataframes and matricies often with low confidence and a lingering confusion. I needed to know how these R data structures were related. I finally created these notes for myself to get a grip on the topic. Hopefully you find value in them as well.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Bayesian Optimization</title>
      <link>https://ericpena.github.io/posts/bayes-opt/</link>
      <pubDate>Tue, 14 Apr 2020 00:00:00 +0000</pubDate>
      <guid>https://ericpena.github.io/posts/bayes-opt/</guid>
      <description>&lt;h1 id=&#34;bayesian-optimization&#34;&gt;Bayesian Optimization&lt;/h1&gt;&#xA;&lt;p&gt;Below is a walk-through how to perform Bayesian Optimization in Python. This code follows work of Martin Krasser in order to optimize the following objective function:&lt;/p&gt;&#xA;&lt;p&gt;$$f(x) = 2 \sin{(4 x)} \cos{(x)}$$&#xA;$$\text{where } (1 &amp;lt; x &amp;lt; 4)$$&lt;/p&gt;&#xA;&lt;p&gt;The first section goes through designing a Bayesian Optimization algorithm using Numpy and SciPy. The second section goes into how we can take advantage of a Python package to optimize our function. The is one of the cleanest explanations of Bayesian optimization I&amp;rsquo;ve come across so I found it helpful to go through this procedure myself. Bayesian optimization is also often used to perform hyperparameter optimization.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Genetic Algorithm Introduction</title>
      <link>https://ericpena.github.io/posts/ga-intro/</link>
      <pubDate>Tue, 14 Apr 2020 00:00:00 +0000</pubDate>
      <guid>https://ericpena.github.io/posts/ga-intro/</guid>
      <description>&lt;h1 id=&#34;what-is-a-genetic-algorithm&#34;&gt;What is a Genetic Algorithm&lt;/h1&gt;&#xA;&lt;p&gt;Evolutionary programming is a family of global optimization techniques that are biologically inspired. It works similarly to the natural process in evolutionary biology. Trial and error is a large component along with stochasticity and survival of the fittest. The type of evolutionary computation that we will focus on is genetic algorithms which became popular by the American Professor of Psychology, Electrical Engineering, and Computer Science, John Holland. Genetic algorithms work using natural selection of different possible solutions competing with one another. It incorporates biological concepts such as selection, crossover, and mutation. Candidate solutions can mate with each other and create offspring who can then compete with other solutions in their generation.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Review of Complexity Book by Melanie Mitchell</title>
      <link>https://ericpena.github.io/posts/mitchell/</link>
      <pubDate>Tue, 07 Apr 2020 00:00:00 +0000</pubDate>
      <guid>https://ericpena.github.io/posts/mitchell/</guid>
      <description>&lt;p&gt;&lt;em&gt;Complexity: A Guided Tour&lt;/em&gt;&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;part-i&#34;&gt;Part I&lt;/h1&gt;&#xA;&lt;h3 id=&#34;introduction&#34;&gt;Introduction&lt;/h3&gt;&#xA;&lt;p&gt;Providing the multifaceted story of how complex systems has evolved into what it is today is no easy feat. Dr. Melanie Mitchell not only gives a comprehensive historical tour of science and mathematics, she also provides foundational knowledge that any reader can carry to appreciate the essence of what it means for a system to be complex in the technical sense. Early on, she gives a clear definition of complex systems as an interdisciplinary field that studies how large networks of entities with no central controller can organize themselves and exhibit collective behavior given simple rules. However, she also humbly confesses that given how nebulous the field is, there has yet to be one clear definition of complexity that everyone can agree on. I appreciate how candid she is about what is known and what is not known in this field. Mitchell shares that even a panel she organized of great system science thinkers at the Santa Fe Institute could not agree on an answer to the question: &amp;ldquo;how do you define complexity?&amp;rdquo;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Optimizing Trajectory Angle</title>
      <link>https://ericpena.github.io/posts/trajectory-opt/</link>
      <pubDate>Fri, 13 Dec 2019 00:00:00 +0000</pubDate>
      <guid>https://ericpena.github.io/posts/trajectory-opt/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;I had the pleasure of teaching physics for the Pre First-Year Academic and Career Engagement &lt;a href=&#34;https://mep.engineering.osu.edu/preface-summer-bridge-program&#34;&gt;(PREFACE)&lt;/a&gt; Program. These are students that graduated high school and are transitioning into college to study engineering. The following is a problem I gave my students as a challenge question on their final. Many students found this problem interesting and we had a long discussion about the power of learning theoretical mechanics for the future of their respective degrees.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Cellular Automata Optimization using Genetic Algorithms</title>
      <link>https://ericpena.github.io/posts/ga-liso/</link>
      <pubDate>Sun, 01 Dec 2019 00:00:00 +0000</pubDate>
      <guid>https://ericpena.github.io/posts/ga-liso/</guid>
      <description>&lt;div class=&#34;info-blue&#34;&gt;&#xA;    &lt;style&gt;&#xA;      .info-blue a {&#xA;        color: inherit;&#xA;        color: #f39c12;&#xA;      }&#xA;      .info-blue a:hover {&#xA;        color: #f39c12;&#xA;        font-weight: bold;&#xA;      }&#xA;    &lt;/style&gt;&#xA;    If you&amp;rsquo;d rather read the PDF version: &lt;a href=&#34;../images/ga-liso/LISO_Project.pdf&#34;&gt;[PDF] Cellular Automata Optimization using Genetic Algorithms&lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&lt;script&gt;&#xA;  document.querySelectorAll(&#39;.info-blue a&#39;).forEach(function(link) {&#xA;    link.setAttribute(&#39;target&#39;, &#39;_blank&#39;);&#xA;    link.setAttribute(&#39;rel&#39;, &#39;noopener noreferrer&#39;);&#xA;  });&#xA;&lt;/script&gt;&#xA;&lt;h3 id=&#34;abstract&#34;&gt;Abstract&lt;/h3&gt;&#xA;&lt;p&gt;The mechanism by which nature exhibits emergent patterns and behaviors has been a mystery throughout history. One application that has been developed which tends to mimic nature is Conway’s Game of Life — an application in the field of cellular automata. The ability to predict a final state of a system, given an initial state in the context of Game of Life, come as an insurmountable task. In this work, genetic algorithms are explored along with how they may be used to search for initial conditions such that their final outcomes are optimal. Optimal final states may be defined in terms of growth, diversity, and density of the cellular automaton evolution. This may be beneficial in exploring the way in which coupled components interact in mathematical and physical systems.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Character Analysis</title>
      <link>https://ericpena.github.io/posts/character-analysis/</link>
      <pubDate>Thu, 03 Oct 2019 00:00:00 +0000</pubDate>
      <guid>https://ericpena.github.io/posts/character-analysis/</guid>
      <description>&lt;h3 id=&#34;introduction&#34;&gt;Introduction&lt;/h3&gt;&#xA;&lt;p&gt;I have separated my work into sections for ease of flow. All Python code is included in this article. Observations of data are shown in the histogram and heatmap below.&lt;/p&gt;&#xA;&lt;h3 id=&#34;plot-of-histogram&#34;&gt;Plot of Histogram&lt;/h3&gt;&#xA;&lt;p&gt;&lt;img src=&#34;../images/character-analysis/hist.png&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;h3 id=&#34;histogram-observations&#34;&gt;Histogram Observations&lt;/h3&gt;&#xA;&lt;p&gt;Here are a few observations about the histogram above:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;$space\ character$: The space character is by far the most frequent. This makes sense since after each word, a space appears&lt;/li&gt;&#xA;&lt;li&gt;${j, z, x, k}$: Characters such as $j$, $z$, $x$, and $k$ are low frequency &amp;mdash; not often present in common words&lt;/li&gt;&#xA;&lt;li&gt;$vowels$: It makes sense for the frequency of the vowels to be higher than consonants given how English is structured&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;heatmap-of-character-transitions&#34;&gt;Heatmap of Character Transitions&lt;/h3&gt;&#xA;&lt;p&gt;The heat map below visually represents the frequencies of the transitions $c_i \rightarrow c_{i+1}$ where $c_i$ is the $i^{th}$ character in the supplied text file.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Speed of Julia</title>
      <link>https://ericpena.github.io/posts/julia-speed/</link>
      <pubDate>Mon, 09 Sep 2019 00:00:00 +0000</pubDate>
      <guid>https://ericpena.github.io/posts/julia-speed/</guid>
      <description>&lt;h3 id=&#34;creating-fibn&#34;&gt;Creating fib(n)&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; fib(n)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (n &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;||&lt;/span&gt; n &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; fib(n &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; fib(n &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;timing-fibn-140&#34;&gt;Timing fib(n) 1:40&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; fibTime(k)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    t &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;k&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        push!(t, (&lt;span style=&#34;color:#a6e22e&#34;&gt;@timed&lt;/span&gt; fib(i))[&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;])&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; t&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# :: Print @timed Fibonacci 1 through 40&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;println(fibTime(&lt;span style=&#34;color:#ae81ff&#34;&gt;40&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;plotting-timed-results&#34;&gt;Plotting @Timed Results&lt;/h3&gt;&#xA;&lt;p&gt;The timing for Julia is surprisingly very fast!&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; Plots&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;plot(fibTime(&lt;span style=&#34;color:#ae81ff&#34;&gt;40&lt;/span&gt;), title&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Timed Recursive Fibonacci Algorithm&amp;#34;&lt;/span&gt;, &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  color &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;:red&lt;/span&gt;, fill &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;.3&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;:red&lt;/span&gt;), legend &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; false)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;xaxis!(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;[n given in fib(n)]&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;yaxis!(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Time [seconds]&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img alt=&#34;timed.png&#34; src=&#34;../images/julia-speed/timed.png&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Tensor Intro</title>
      <link>https://ericpena.github.io/posts/tensor/</link>
      <pubDate>Sat, 20 Apr 2019 00:00:00 +0000</pubDate>
      <guid>https://ericpena.github.io/posts/tensor/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;../images/tensor-intro/Vector-1-Form.svg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Motivation:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;General Relativity&lt;/li&gt;&#xA;&lt;li&gt;Inertia Tensor&lt;/li&gt;&#xA;&lt;li&gt;Stress Tensor&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;It took me a whole week figure out what a tensor actually is. You will find many definitions and some are only partially correct. Let&amp;rsquo;s walk through the different explanations and learn how to think about them.&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;(Array Definition)&lt;/strong&gt; Tensor = Multi-dimensional array of numbers (scalars (rank 0), vectors (rank 1), matricies (rank 2), etc.). This is true in a sense but there is a truer geometrical meaning behind the concept of a tensor.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;(Coordinate Definition)&lt;/strong&gt; Tensor = an object that is invariant under a change of coordinates and has &lt;em&gt;components&lt;/em&gt; that change in a special, predictable way under a change of coordinates. This is also true but let&amp;rsquo;s dive even deeper to learn how a tensor allows this behavior to take place.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;(Abstract Definition)&lt;/strong&gt; Tensor = a collection of vectors and covectors combined together using the tensor product&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;The important thing to keep in mind is that vectors exist independently of their components and their components depend on the coordinate system used to define vectors.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Coding the Card Game: War</title>
      <link>https://ericpena.github.io/posts/war/</link>
      <pubDate>Sat, 16 Mar 2019 00:00:00 +0000</pubDate>
      <guid>https://ericpena.github.io/posts/war/</guid>
      <description>&lt;h4 id=&#34;simulation-and-analysis-of-war-the-card-game&#34;&gt;Simulation and Analysis of War (the card game)&lt;/h4&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Game designer Greg Costikyan has observed that since there are no choices in the game, and all outcomes are random, it cannot be considered a game by some definitions. I chose to program this game because its complete random chance feature. It was an opportunity to practice python and writing recursive functions.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h1 id=&#34;the-objective-of-the-game-is-to-win-all-cards&#34;&gt;The objective of the game is to win all cards.&lt;/h1&gt;&#xA;&lt;p&gt;A 52-card deck is divided evenly among the players, giving each a down stack. In unison, each player reveals the top card of their deck—this is a &amp;ldquo;battle&amp;rdquo;-and the player with the higher card takes both of the cards played and moves them to their reserves stack. The reserves stack is used when there are no longer cards to play in hand.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Network Theory</title>
      <link>https://ericpena.github.io/posts/network-theory/</link>
      <pubDate>Sun, 16 Dec 2018 00:38:01 -0500</pubDate>
      <guid>https://ericpena.github.io/posts/network-theory/</guid>
      <description>&lt;p&gt;Graphs may be represented in the form of a matrix. Main types of graphs that may be represented are:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Simple Graph&lt;/li&gt;&#xA;&lt;li&gt;Multigraph&lt;/li&gt;&#xA;&lt;li&gt;Directed Graph&lt;/li&gt;&#xA;&lt;li&gt;Weighted Graph&lt;/li&gt;&#xA;&lt;li&gt;Bipartite Graph&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;directed-graph&#34;&gt;Directed Graph&lt;/h3&gt;&#xA;&lt;p&gt;Directed graphs are graphs that contain edges with direction. Vertices may have inward and outward edges.&lt;/p&gt;&#xA;&lt;p&gt;Unlike adjacency matricies for simped graphs, adjacency matricies for directed graphs are non-symmetric. Elements of an adjacency matrix for a directed graph may be denoted as:&#xA;$$A_{ij}$$&#xA;which represents an edge from vertex $j$ to $i$.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
